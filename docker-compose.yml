version: '3.9'

services:
  service-discovery:
    container_name: ${SERVICE_DISCOVERY_HOST}
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
      args:
        JAVA_VERSION: ${JAVA_VERSION}
        SERVICE_DISCOVERY_PORT_INNER: ${SERVICE_DISCOVERY_PORT_INNER}
    env_file:
      - .env
    restart: on-failure
    ports:
      - ${SERVICE_DISCOVERY_PORT_OUTER}:${SERVICE_DISCOVERY_PORT_INNER}

  api-gateway:
    container_name: ${API_GATEWAY_HOST}
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
      args:
        JAVA_VERSION: ${JAVA_VERSION}
        API_GATEWAY_PORT_INNER: ${API_GATEWAY_PORT_INNER}
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - service-discovery
    ports:
      - ${API_GATEWAY_PORT_OUTER}:${API_GATEWAY_PORT_INNER}

  nginx:
    image: nginx
    volumes:
      - ./configuration/nginx/nginx.conf:/etc/nginx/nginx.conf
    env_file:
      - .env
    ports:
      - ${NGINX_PORT_OUTER}:${NGINX_PORT_INNER}

  postgres:
    container_name: ${POSTGRES_HOST}
    image: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE_USER_NAME}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: on-failure
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT_OUTER}:${POSTGRES_PORT_INNER}

  user-database-manager-service:
    container_name: ${USER_DATABASE_MANAGER_SERVICE_HOST}
    build:
      context: ./user-database-manager-service
      dockerfile: Dockerfile
      args:
        JAVA_VERSION: ${JAVA_VERSION}
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - service-discovery
      - postgres
